<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_window_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -100000;
message = "Undefined Message";
obj_game_state.game_state = "suspended_for_message";
start = false;
message_array = '';
new_messages = 0;
tokenise_string = true;
speaker = "Default";
numbers = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (start == true) {
    image_yscale = lerp(image_yscale, target_yscale,0.4);
    
    progress = image_yscale / target_yscale;
    y = lerp(start_y, target_y, progress);
}

if (tokenise_string) {
    if (string_length(message) &gt; 100) {
        max_length = 100;

        while ((string_length(speaker) + string_length(message)) &gt; max_length) {
            i=max_length-10;
            space = "a";
            while(space != " ") {
                space = string_char_at(message, i); 
                i++;   
            }
            max_length = i;
            message = string_insert("||", message, max_length);
            max_length += 100 - string_length(speaker);
        }
        message = string_insert("||", message, string_length(message)+1);
        
        numbers = string_count("||", message);
        
        for( i = 0; i &lt; numbers; i += 1 )
        {
            pos = string_pos("||", message);
            message_array[i] = speaker + ": " + string_copy(message, 1, pos-1);
            message = string_delete(message, 1, pos+1);
        }
        message = message_array[0];
        index = 0;
    } else {
        index = 1;
        message = speaker + ": " + message;
    }
    
    
    tokenise_string = false;
}

if (obj_game_state.game_state == "suspended_for_message" &amp;&amp; keyboard_check_pressed(KEY_INTERACT)
    &amp;&amp; index &lt; numbers-1) {
    index++;
    message = message_array[index];      
} else if (obj_game_state.game_state == "suspended_for_message" &amp;&amp; keyboard_check_pressed(KEY_INTERACT)) {
    obj_game_state.game_state = "ego_control";
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_y = y;
start_y = y + sprite_height / 2;
y = start_y;

target_yscale = image_yscale;
image_yscale = 0;
start = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fa_default);
draw_sprite_stretched_ext(spr_window_base,0,x + 4, y + 4, sprite_width + 80, sprite_height + 10, c_blue,0.6);

draw_text_ext(x+16,y+16,message,16,sprite_width+56);
draw_set_colour(c_white);

///Draw Window
draw_sprite_stretched(spr_window_T, 0,x+4,y,sprite_width + 66,16);
draw_sprite_stretched(spr_window_B, 0,x+4,y+sprite_height,sprite_width + 66,16);
    
draw_sprite_stretched(spr_window_L, 0,x,y+4,16,sprite_height-4);
draw_sprite_stretched(spr_window_R, 0,x+sprite_width+70,y+4,16,sprite_height-4);

draw_sprite(spr_window_TL,0,x,y);
draw_sprite(spr_window_TR,0,x+sprite_width+70,y);
draw_sprite(spr_window_BL,0,x,y + sprite_height);
draw_sprite(spr_window_BR,0,x + sprite_width+70,y + sprite_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
