<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
walk = 3;
sprint = 6;
movespeed = walk;
action = false;
spell = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_up = -keyboard_check(KEY_UP);
key_down = keyboard_check(KEY_DOWN);
key_left = -keyboard_check(KEY_LEFT);
key_right = keyboard_check(KEY_RIGHT);
run = keyboard_check(KEY_RUN);
z = keyboard_check_pressed(KEY_INTERACT);
inv = keyboard_check_pressed(KEY_INV);
attack = mouse_check_button_pressed(KEY_ATTACK);

if(obj_game_state.game_state == "ego_control") {   
    
    if(run) movespeed = sprint;
    else movespeed = walk;

    depth = phy_position_y * -1;
    
    hmove = key_left + key_right;
    hsp = hmove * movespeed;
    if(hsp &gt; 0) sprite_index = spr_hero_right;
    if(hsp &lt; 0) sprite_index = spr_hero_left;
    
    vmove = key_up + key_down;
    vsp = vmove * movespeed;
    if(vsp &gt; 0) sprite_index = spr_hero_down;
    if(vsp &lt; 0) sprite_index = spr_hero_up;
    
    if(hsp != 0 || vsp != 0) image_speed = 0.2;
    else image_speed = 0;
    
    //keep within bounds of screen
    if (phy_position_x+hsp &gt; 3 &amp;&amp; phy_position_x+hsp &lt; room_width-3) phy_position_x+=hsp;
    if (phy_position_y+vsp &gt; 3 &amp;&amp; phy_position_y+vsp &lt; room_height-3) phy_position_y+=vsp;
        
    if (inv) {
        if(!instance_exists(obj_action_wheel)) instance_create(x,y,obj_action_wheel);
        obj_game_state.game_state = "inventory";
        obj_action_wheel.spawn = true;
        //window_text(view_xview[0]+25, view_yview[0]+20, 100, 100, "Test this shit out my nigga how cool is this mother fucking thing aww yis get me in.");
    }
    
    if (attack) {
        obj_game_state.game_state = "attacking";
        dir = point_direction(phy_position_x, phy_position_y, mouse_x, mouse_y);
        spawn_x = lengthdir_x(6, dir);
        spawn_y = lengthdir_y(6, dir);
        if (!instance_exists(obj_sword_attack)) swipe = instance_create(phy_position_x + spawn_x, phy_position_y + spawn_y, obj_sword_attack);
        with(swipe) {
            audio_play_sound(snd_sword_swipe,1, false); 
            phy_rotation = -other.dir;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide with
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_npc_base">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//draw_circle(x,y-16,24,3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>99</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>99</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,16</point>
    <point>12,16</point>
  </PhysicsShapePoints>
</object>
